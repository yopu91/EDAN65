Program ::= Function*;

abstract Function;
ParamFunc:Function 	::= Identifier:IdUse Param* Stmt*;
Param			::= IdUse;

abstract Stmt;
WhileStmt:Stmt		::= Cond:Expr Stmt;
IfStmt:Stmt		::= Cond:Expr Then:Stmt [Else:Stmt]; 
ReturnStmt:Stmt		::= Expr;
FuncStmt:Stmt		::= IdUse Argument*;
Argument 		::= IdUse;
Assignment:Stmt ::= IdUse Expr;
Declare:Stmt	::= IdUse;


abstract Expr;
Numeral:Expr	::=<NUMERAL>;
IdUse:Expr	::=<ID>;

Add:Expr	::= Expr*;
Sub:Expr	::= Expr*;
Div:Expr	::= Expr*;
Mul:Expr	::= Expr*;
